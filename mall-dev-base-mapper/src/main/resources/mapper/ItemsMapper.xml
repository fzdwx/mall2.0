<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.like.mapper.ItemsMapper">
    <resultMap id="BaseResultMap" type="com.like.pojo.Items">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="item_name" property="itemName" jdbcType="VARCHAR"/>
        <result column="cat_id" property="catId" jdbcType="INTEGER"/>
        <result column="root_cat_id" property="rootCatId" jdbcType="INTEGER"/>
        <result column="sell_counts" property="sellCounts" jdbcType="INTEGER"/>
        <result column="on_off_status" property="onOffStatus" jdbcType="INTEGER"/>
        <result column="created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <select id="queryItemComments" parameterType="map" resultType="com.like.pojo.vo.ItemCommentVO">
        SELECT ic.comment_level commentLevel,
        ic.content content,
        ic.sepc_name sepcName,
        ic.created_time createTime,
        u.face userFace,
        u.nickname nickName
        FROM items_comments ic
        LEFT join users u on ic.user_id = u.id
        WHERE ic.item_id = #{param.itemId}
        <if test="param.level != null and param.level !='' ">
            AND ic.comment_level = #{param.level}
        </if>
    </select>

    <select id="searchItems" parameterType="map" resultType="com.like.pojo.vo.SearchItemsVO">
        SELECT
        i.id itemId,
        i.item_name itemName,
        i.sell_counts sellCounts,
        ii.url imgUrl,
        tempSpec.price_discount price
        FROM items i
        LEFT join items_img ii on i.id = ii.item_id
        left join (
        select item_id, min(price_discount) as price_discount
        from items_spec
        group by item_id
        ) tempSpec on i.id = tempSpec.item_id
        where ii.is_main = 1
        <if test="param.keywords != null and param.keywords !='' ">
            AND i.item_name like '%${param.keywords}%'
        </if>
        order by
        <choose>
            <when test="param.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="param.sort == &quot;p&quot;">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_Name asc
            </otherwise>
        </choose>
    </select>

    <select id="searchItemsByThirdCategory" parameterType="map" resultType="com.like.pojo.vo.SearchItemsVO">
        SELECT
        i.id itemId,
        i.item_name itemName,
        i.sell_counts sellCounts,
        ii.url imgUrl,
        tempSpec.price_discount price,
        FROM items i
        LEFT join items_img ii on i.id = ii.item_id
        left join (
        select item_id, min(price_discount) as price_discount
        from items_spec
        group by item_id
        ) tempSpec on i.id = tempSpec.item_id
        where ii.is_main = 1
        and i.cat_id = #{param.catId}
        order by
        <choose>
            <when test="param.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="param.sort == &quot;p&quot;">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_Name asc
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecId" parameterType="list" resultType="ShopCartVO">
        select
        i.id itemId,
        ii.url itemImgUrl,
        i.item_name itemName,
        isp.id specId,
        isp.name specName,
        isp.price_discount priceDiscount,
        isp.price_normal priceNormal
        from items_spec isp
        left join items i on isp.item_id = i.id
        left join items_img ii on i.id = ii.item_id
        where ii.is_main =1 and isp.id
        in
        <foreach collection="param" index="index" item="specId" open="(" close=")" separator=",">
            #{specId}
        </foreach>
    </select>
</mapper>